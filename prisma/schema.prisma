// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  userAuthId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Board Board[]

  @@map("users")
}

model Board {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  name    String
  tasks   Task[]
  columns Column[]

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  @@unique([name])
  @@map("boards")
}

model Column {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())

  name String @default("todo")

  tasks Task[]

  board   Board?  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId String? @db.ObjectId

  @@unique([name])
  @@map("columns")
}

model Task {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  title       String
  description String
  status      String

  order    Int?
  subtasks SubTask[]

  board    Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId  String @db.ObjectId
  column   Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId String @db.ObjectId

  @@unique([title])
  @@index([order, id])
  @@map("tasks")
}

model SubTask {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  done  Boolean @default(false)

  Task   Task?   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId String? @db.ObjectId

  @@unique([title])
  @@map("subtasks")
}
