// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String?
  password  String
  boards    Board[]
  tasks     Task[]
  subtasks  SubTask[]
  columns   Column[]
  createdAt DateTime  @default(now())
}

model Board {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  name      String    @unique
  slug      String    @unique
  columns   Column[]
  tasks     Task[]
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  SubTask   SubTask[]
}

model Column {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  user    User?   @relation(fields: [userId], references: [id])
  userId  String? @db.ObjectId
  board   Board?  @relation(fields: [boardId], references: [id])
  boardId String? @db.ObjectId
  Task    Task[]

  @@map("columns")
}

model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  title       String
  description String
  status      String
  subtasks    SubTask[]
  board       Board     @relation(fields: [boardId], references: [id])
  boardId     String    @db.ObjectId
  column      Column    @relation(fields: [columnId], references: [id])
  columnId    String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId

  @@map("tasks")
}

model SubTask {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  isCompleted Boolean @default(false)
  board       Board   @relation(fields: [boardId], references: [id])
  boardId     String  @db.ObjectId
  task        Task    @relation(fields: [taskId], references: [id])
  taskId      String  @db.ObjectId
  user        User    @relation(fields: [userId], references: [id])
  userId      String  @db.ObjectId

  @@map("subtasks")
}


    // "generate": "npm -s run generate:prisma && npm -s run generate:nexus",
    // "generate:prisma": "prisma generate",
    // "ts-node": "ts-node --compiler-options \"{\\\"module\\\":\\\"commonjs\\\"}\"",
    // "generate:nexus": "ts-node --transpile-only -P nexus.tsconfig.json pages/api"
  },
